[{"D:\\med-chain\\client\\src\\index.js":"1","D:\\med-chain\\client\\src\\App.jsx":"2","D:\\med-chain\\client\\src\\routes.js":"3","D:\\med-chain\\client\\src\\contexts\\AlertContext\\AlertContext.js":"4","D:\\med-chain\\client\\src\\contexts\\EthContext\\index.js":"5","D:\\med-chain\\client\\src\\pages\\Checkup.jsx":"6","D:\\med-chain\\client\\src\\components\\layouts\\AlertPopup.jsx":"7","D:\\med-chain\\client\\src\\components\\layouts\\Layout.jsx":"8","D:\\med-chain\\client\\src\\contexts\\EthContext\\EthContext.js":"9","D:\\med-chain\\client\\src\\contexts\\EthContext\\state.js":"10","D:\\med-chain\\client\\src\\contexts\\EthContext\\useEth.js":"11","D:\\med-chain\\client\\src\\pages\\index.jsx":"12","D:\\med-chain\\client\\src\\pages\\patient\\index.jsx":"13","D:\\med-chain\\client\\src\\pages\\doctor\\index.jsx":"14","D:\\med-chain\\client\\src\\contexts\\EthContext\\EthProvider.jsx":"15","D:\\med-chain\\client\\src\\contexts\\AlertContext\\useAlert.js":"16","D:\\med-chain\\client\\src\\ipfs.js":"17","D:\\med-chain\\client\\src\\components\\CustomButton.jsx":"18","D:\\med-chain\\client\\src\\components\\Record.jsx":"19","D:\\med-chain\\client\\src\\pages\\doctor\\AddRecordModal.jsx":"20"},{"size":354,"mtime":1705816614139,"results":"21","hashOfConfig":"22"},{"size":388,"mtime":1705816614061,"results":"23","hashOfConfig":"22"},{"size":1155,"mtime":1705816614202,"results":"24","hashOfConfig":"22"},{"size":767,"mtime":1705816615030,"results":"25","hashOfConfig":"22"},{"size":185,"mtime":1705816615133,"results":"26","hashOfConfig":"22"},{"size":3059,"mtime":1705816615253,"results":"27","hashOfConfig":"22"},{"size":793,"mtime":1705816614958,"results":"28","hashOfConfig":"22"},{"size":1560,"mtime":1705816614989,"results":"29","hashOfConfig":"22"},{"size":109,"mtime":1705816615089,"results":"30","hashOfConfig":"22"},{"size":584,"mtime":1705816615163,"results":"31","hashOfConfig":"22"},{"size":151,"mtime":1705816615194,"results":"32","hashOfConfig":"22"},{"size":3989,"mtime":1705816615274,"results":"33","hashOfConfig":"22"},{"size":3002,"mtime":1705816615361,"results":"34","hashOfConfig":"22"},{"size":7798,"mtime":1705816615336,"results":"35","hashOfConfig":"22"},{"size":1903,"mtime":1705816615116,"results":"36","hashOfConfig":"22"},{"size":161,"mtime":1705816615053,"results":"37","hashOfConfig":"22"},{"size":412,"mtime":1705816614171,"results":"38","hashOfConfig":"22"},{"size":627,"mtime":1705816614548,"results":"39","hashOfConfig":"22"},{"size":2081,"mtime":1705816614597,"results":"40","hashOfConfig":"22"},{"size":2513,"mtime":1705816615305,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12ul5ab",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\med-chain\\client\\src\\index.js",[],"D:\\med-chain\\client\\src\\App.jsx",[],"D:\\med-chain\\client\\src\\routes.js",["87"],"// Guards\r\nimport Layout from './components/layouts/Layout'\r\nimport AlertPopup from './components/layouts/AlertPopup'\r\n\r\n// Pages\r\nimport Home from './pages'\r\nimport Patient from './pages/patient'\r\nimport Doctor from './pages/doctor'\r\nimport HeaderAppBar from './components/layouts/Layout'\r\nimport SymptomChecker from './pages/Checkup'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    children: [\r\n      {\r\n        path: '',\r\n        element: (\r\n          <>\r\n            <AlertPopup />\r\n            <Home />\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        path: 'patient',\r\n        element: (\r\n          <>\r\n            <HeaderAppBar />\r\n            <AlertPopup />\r\n            <Patient />\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        path: 'doctor',\r\n        element: (\r\n          <>\r\n            <HeaderAppBar />\r\n            <AlertPopup />\r\n            <Doctor />\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        path: 'checkup',\r\n        element:(\r\n          <>\r\n            <HeaderAppBar />\r\n            <AlertPopup />\r\n            <SymptomChecker />\r\n          </>\r\n        )\r\n      }\r\n    ],\r\n  },\r\n]\r\n\r\nexport default routes\r\n","D:\\med-chain\\client\\src\\contexts\\AlertContext\\AlertContext.js",[],"D:\\med-chain\\client\\src\\contexts\\EthContext\\index.js",[],"D:\\med-chain\\client\\src\\pages\\Checkup.jsx",[],"D:\\med-chain\\client\\src\\components\\layouts\\AlertPopup.jsx",[],"D:\\med-chain\\client\\src\\components\\layouts\\Layout.jsx",[],"D:\\med-chain\\client\\src\\contexts\\EthContext\\EthContext.js",[],"D:\\med-chain\\client\\src\\contexts\\EthContext\\state.js",[],"D:\\med-chain\\client\\src\\contexts\\EthContext\\useEth.js",[],"D:\\med-chain\\client\\src\\pages\\index.jsx",["88","89","90","91","92","93"],"import { Box, Typography, Backdrop, CircularProgress, Divider } from '@mui/material'\r\nimport React from 'react'\r\nimport AccountBalanceWalletRoundedIcon from '@mui/icons-material/AccountBalanceWalletRounded'\r\nimport VideoCover from 'react-video-cover'\r\nimport BackgroundVideo from '../assets/BackgroundVideo.mp4'\r\nimport logo from '../assets/tealNoBG-cropped.png'\r\nimport useEth from '../contexts/EthContext/useEth'\r\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded'\r\nimport CustomButton from '../components/CustomButton'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport LoginRoundedIcon from '@mui/icons-material/LoginRounded'\r\nimport { grey } from '@mui/material/colors'\r\nimport '../App.css'\r\n\r\nconst Home = () => {\r\n  const {\r\n    state: { contract, accounts, role, loading },\r\n    dispatch,\r\n  } = useEth()\r\n  const navigate = useNavigate()\r\n\r\n  const registerDoctor = async () => {\r\n    try {\r\n      await contract.methods.addDoctor().send({ from: accounts[0] })\r\n      dispatch({\r\n        type: 'ADD_DOCTOR',\r\n      })\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  const ActionSection = () => {\r\n    if (!accounts) {\r\n      return (\r\n        <Typography variant='h5' color='white'>\r\n          Open your MetaMask wallet to get connected, then refresh this page\r\n        </Typography>\r\n      )\r\n    } else {\r\n      if (role === 'unknown') {\r\n        return (\r\n          <Box display='flex' flexDirection='column' alignItems='center'>\r\n            <Box mb={2}>\r\n              <CustomButton text='Doctor Register' handleClick={() => registerDoctor()}>\r\n                <PersonAddAlt1RoundedIcon style={{ color: 'white' }} />\r\n              </CustomButton>\r\n            </Box>\r\n            <Typography variant='h5' color='white'>\r\n              If you are a patient, ask your doctor to register for you\r\n            </Typography>\r\n          </Box>\r\n        )\r\n      } else if (role === 'patient') {\r\n        return (\r\n          <CustomButton text='Patient Portal' handleClick={() => navigate('/patient')}>\r\n            <LoginRoundedIcon style={{ color: 'white' }} />\r\n          </CustomButton>\r\n        )\r\n      } else if (role === 'doctor') {\r\n        return (\r\n          <CustomButton text='Doctor Portal' handleClick={() => navigate('/doctor')}>\r\n            <LoginRoundedIcon style={{ color: 'white' }} />\r\n          </CustomButton>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <Backdrop sx={{ color: '#fff', zIndex: theme => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color='inherit' />\r\n      </Backdrop>\r\n    )\r\n  } else {\r\n    return (\r\n      <Box\r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'\r\n        width='100vw'\r\n        height='100vh'\r\n        id='background'\r\n      >\r\n        <Box\r\n          style={{\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            overflow: 'hidden',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: -1,\r\n          }}\r\n        >\r\n          \r\n        </Box>\r\n        <Box id='home-page-box' display='flex' flexDirection='column' justifyContent='center' alignItems='center' p={5}>\r\n          <Typography variant='h1' color='#00bfa5' fontWeight={900} margin={'2rem'}>MediCord</Typography>\r\n        <Typography variant='h2' color='#00bfa5' fontWeight={700}>\r\n              Electronic health records\r\n            </Typography>\r\n          <Box mt={2} mb={5}>\r\n            <Typography variant='h4' color='white'>\r\n              Own Your Health\r\n            </Typography>\r\n          </Box>\r\n          <ActionSection />\r\n          <br />\r\n          <br />\r\n          <CustomButton text='Quick test' handleClick={() => navigate('/checkup')}>\r\n            <LoginRoundedIcon style={{ color: 'white' }} />\r\n          </CustomButton>\r\n          \r\n        </Box>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","D:\\med-chain\\client\\src\\pages\\patient\\index.jsx",[],"D:\\med-chain\\client\\src\\pages\\doctor\\index.jsx",["94","95"],"import { Box, Divider, FormControl, Modal, TextField, Typography, Backdrop, CircularProgress } from '@mui/material'\r\nimport React, { useCallback } from 'react'\r\nimport { useState } from 'react'\r\nimport CustomButton from '../../components/CustomButton'\r\nimport SearchRoundedIcon from '@mui/icons-material/SearchRounded'\r\nimport useEth from '../../contexts/EthContext/useEth'\r\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded'\r\nimport useAlert from '../../contexts/AlertContext/useAlert'\r\nimport AddRecordModal from './AddRecordModal'\r\nimport CloudUploadRoundedIcon from '@mui/icons-material/CloudUploadRounded'\r\nimport ipfs from '../../ipfs'\r\nimport Record from '../../components/Record'\r\nimport { grey } from '@mui/material/colors'\r\n\r\nconst Doctor = () => {\r\n  const {\r\n    state: { contract, accounts, role, loading },\r\n  } = useEth()\r\n  const { setAlert } = useAlert()\r\n\r\n  const [patientExist, setPatientExist] = useState(false)\r\n  const [searchPatientAddress, setSearchPatientAddress] = useState('')\r\n  const [addPatientAddress, setAddPatientAddress] = useState('')\r\n  const [records, setRecords] = useState([])\r\n  const [addRecord, setAddRecord] = useState(false)\r\n\r\n  const searchPatient = async () => {\r\n    try {\r\n      if (!/^(0x)?[0-9a-f]{40}$/i.test(searchPatientAddress)) {\r\n        setAlert('Please enter a valid wallet address', 'error')\r\n        return\r\n      }\r\n      const patientExists = await contract.methods.getPatientExists(searchPatientAddress).call({ from: accounts[0] })\r\n      if (patientExists) {\r\n        const records = await contract.methods.getRecords(searchPatientAddress).call({ from: accounts[0] })\r\n        console.log('records :>> ', records)\r\n        setRecords(records)\r\n        setPatientExist(true)\r\n      } else {\r\n        setAlert('Patient does not exist', 'error')\r\n      }\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  const registerPatient = async () => {\r\n    try {\r\n      await contract.methods.addPatient(addPatientAddress).send({ from: accounts[0] })\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  const addRecordCallback = useCallback(\r\n    async (buffer, fileName, patientAddress) => {\r\n      if (!patientAddress) {\r\n        setAlert('Please search for a patient first', 'error')\r\n        return\r\n      }\r\n      try {\r\n        const res = await ipfs.add(buffer)\r\n        const ipfsHash = res[0].hash\r\n        if (ipfsHash) {\r\n          await contract.methods.addRecord(ipfsHash, fileName, patientAddress).send({ from: accounts[0] })\r\n          setAlert('New record uploaded', 'success')\r\n          setAddRecord(false)\r\n\r\n          // refresh records\r\n          const records = await contract.methods.getRecords(patientAddress).call({ from: accounts[0] })\r\n          setRecords(records)\r\n        }\r\n      } catch (err) {\r\n        setAlert('Record upload failed', 'error')\r\n        console.error(err)\r\n      }\r\n    },\r\n    [addPatientAddress, accounts, contract]\r\n  )\r\n\r\n  if (loading) {\r\n    return (\r\n      <Backdrop sx={{ color: '#fff', zIndex: theme => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color='inherit' />\r\n      </Backdrop>\r\n    )\r\n  } else {\r\n    return (\r\n      <Box display='flex' justifyContent='center' width='100vw'>\r\n        <Box width='60%' my={5}>\r\n          {!accounts ? (\r\n            <Box display='flex' justifyContent='center'>\r\n              <Typography variant='h6'>Open your MetaMask wallet to get connected, then refresh this page</Typography>\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              {role === 'unknown' && (\r\n                <Box display='flex' justifyContent='center'>\r\n                  <Typography variant='h5'>You're not registered, please go to home page</Typography>\r\n                </Box>\r\n              )}\r\n              {role === 'patient' && (\r\n                <Box display='flex' justifyContent='center'>\r\n                  <Typography variant='h5'>Only doctor can access this page</Typography>\r\n                </Box>\r\n              )}\r\n              {role === 'doctor' && (\r\n                <>\r\n                  <Modal open={addRecord} onClose={() => setAddRecord(false)}>\r\n                    <AddRecordModal\r\n                      handleClose={() => setAddRecord(false)}\r\n                      handleUpload={addRecordCallback}\r\n                      patientAddress={searchPatientAddress}\r\n                    />\r\n                  </Modal>\r\n\r\n                  <Typography variant='h4'>Patient Records</Typography>\r\n                  <Box display='flex' alignItems='center' my={1}>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        variant='outlined'\r\n                        placeholder='Search patient by wallet address'\r\n                        value={searchPatientAddress}\r\n                        onChange={e => setSearchPatientAddress(e.target.value)}\r\n                        InputProps={{ style: { fontSize: '15px' } }}\r\n                        InputLabelProps={{ style: { fontSize: '15px' } }}\r\n                        size='small'\r\n                        style={{backgroundColor: 'white'}}\r\n                      />\r\n                    </FormControl>\r\n                    <Box mx={2}>\r\n                      <CustomButton text={'Search'} handleClick={() => searchPatient()}>\r\n                        <SearchRoundedIcon style={{ color: 'white' }} />\r\n                      </CustomButton>\r\n                    </Box>\r\n                    <CustomButton text={'New Record'} handleClick={() => setAddRecord(true)} disabled={!patientExist}>\r\n                      <CloudUploadRoundedIcon style={{ color: 'white' }} />\r\n                    </CustomButton>\r\n                  </Box>\r\n\r\n                  {patientExist && records.length === 0 && (\r\n                    <Box display='flex' alignItems='center' justifyContent='center' my={5}>\r\n                      <Typography variant='h5'>No records found</Typography>\r\n                    </Box>\r\n                  )}\r\n\r\n                  {patientExist && records.length > 0 && (\r\n                    <Box display='flex' flexDirection='column' mt={3} mb={-2}>\r\n                      {records.map((record, index) => (\r\n                        <Box mb={2}>\r\n                          <Record key={index} record={record} />\r\n                        </Box>\r\n                      ))}\r\n                    </Box>\r\n                  )}\r\n\r\n                  <Box mt={6} mb={4}>\r\n                    <Divider />\r\n                  </Box>\r\n\r\n                  <Typography variant='h4'>Register Patient</Typography>\r\n                  <Box display='flex' alignItems='center' my={1}>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        variant='outlined'\r\n                        placeholder='Register patient by wallet address'\r\n                        value={addPatientAddress}\r\n                        onChange={e => setAddPatientAddress(e.target.value)}\r\n                        InputProps={{ style: { fontSize: '15px' } }}\r\n                        InputLabelProps={{ style: { fontSize: '15px' } }}\r\n                        size='small'                        \r\n                        style={{backgroundColor: 'white'}}\r\n                      />\r\n                    </FormControl>\r\n                    <Box mx={2}>\r\n                      <CustomButton text={'Register'} handleClick={() => registerPatient()}>\r\n                        <PersonAddAlt1RoundedIcon style={{ color: 'white' }} />\r\n                      </CustomButton>\r\n                    </Box>\r\n                  </Box>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Doctor\r\n","D:\\med-chain\\client\\src\\contexts\\EthContext\\EthProvider.jsx",[],"D:\\med-chain\\client\\src\\contexts\\AlertContext\\useAlert.js",[],"D:\\med-chain\\client\\src\\ipfs.js",[],"D:\\med-chain\\client\\src\\components\\CustomButton.jsx",["96","97"],"import React from 'react'\r\nimport { Box, Button, Typography } from '@mui/material'\r\nimport { grey, red, teal } from '@mui/material/colors'\r\n\r\nconst CustomButton = ({ text, handleClick, disabled = false, children }) => {\r\n  return (\r\n    <Button\r\n      startIcon={children}\r\n      style={{\r\n        backgroundColor: disabled ? grey[400] : teal['A700'],\r\n        textTransform: 'none',\r\n        padding: '10px 20px',\r\n      }}\r\n      onClick={handleClick}\r\n      disabled={disabled}\r\n    >\r\n      <Typography variant='h5' color='white'>\r\n        {text}\r\n      </Typography>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default CustomButton\r\n","D:\\med-chain\\client\\src\\components\\Record.jsx",["98","99"],"import { Card, CardContent, IconButton, Typography, Grid, Box } from '@mui/material'\r\nimport React from 'react'\r\nimport DescriptionRoundedIcon from '@mui/icons-material/DescriptionRounded'\r\nimport { grey } from '@mui/material/colors'\r\nimport moment from 'moment'\r\nimport CloudDownloadRoundedIcon from '@mui/icons-material/CloudDownloadRounded'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Record = ({ record }) => {\r\n  const [cid, name, patientId, doctorId, timestamp] = record\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={1}>\r\n            <DescriptionRoundedIcon style={{ fontSize: 40, color: grey[700] }} />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Box display='flex' flexDirection='column'>\r\n              <Typography variant='h6' color={grey[600]}>\r\n                Record name\r\n              </Typography>\r\n              <Typography variant='h6'>{name}</Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Box display='flex' flexDirection='column'>\r\n              <Typography variant='h6' color={grey[600]}>\r\n                Doctor\r\n              </Typography>\r\n              <Typography variant='h6'>{doctorId}</Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Box display='flex' flexDirection='column'>\r\n              <Typography variant='h6' color={grey[600]}>\r\n                Created time\r\n              </Typography>\r\n              <Typography variant='h6'>{moment.unix(timestamp).format('MM-DD-YYYY HH:mm')}</Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <a href={`https://med-chain.infura-ipfs.io/ipfs/${cid}`} target='_blank' rel='noopener noreferrer'>\r\n              <IconButton>\r\n                <CloudDownloadRoundedIcon fontSize='large' />\r\n              </IconButton>\r\n            </a>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Record\r\n","D:\\med-chain\\client\\src\\pages\\doctor\\AddRecordModal.jsx",[],{"ruleId":"100","severity":1,"message":"101","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},{"ruleId":"100","severity":1,"message":"104","line":1,"column":55,"nodeType":"102","messageId":"103","endLine":1,"endColumn":62},{"ruleId":"100","severity":1,"message":"105","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":39},{"ruleId":"100","severity":1,"message":"106","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":18},{"ruleId":"100","severity":1,"message":"107","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":23},{"ruleId":"100","severity":1,"message":"108","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":12},{"ruleId":"100","severity":1,"message":"109","line":12,"column":10,"nodeType":"102","messageId":"103","endLine":12,"endColumn":14},{"ruleId":"100","severity":1,"message":"109","line":13,"column":10,"nodeType":"102","messageId":"103","endLine":13,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":78,"column":5,"nodeType":"112","endLine":78,"endColumn":44,"suggestions":"113"},{"ruleId":"100","severity":1,"message":"114","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"100","severity":1,"message":"115","line":3,"column":16,"nodeType":"102","messageId":"103","endLine":3,"endColumn":19},{"ruleId":"100","severity":1,"message":"116","line":10,"column":21,"nodeType":"102","messageId":"103","endLine":10,"endColumn":30},{"ruleId":"100","severity":1,"message":"117","line":11,"column":9,"nodeType":"102","messageId":"103","endLine":11,"endColumn":17},"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'AccountBalanceWalletRoundedIcon' is defined but never used.","'VideoCover' is defined but never used.","'BackgroundVideo' is defined but never used.","'logo' is defined but never used.","'grey' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setAlert'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'Box' is defined but never used.","'red' is defined but never used.","'patientId' is assigned a value but never used.","'navigate' is assigned a value but never used.",{"desc":"119","fix":"120"},"Update the dependencies array to be: [setAlert, contract.methods, accounts]",{"range":"121","text":"122"},[2937,2976],"[setAlert, contract.methods, accounts]"]